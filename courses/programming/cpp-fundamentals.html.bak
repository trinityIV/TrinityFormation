<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trinity - C++ Fondamentaux</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="../../css/style.css">
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
        <div class="container-fluid">
            <a class="navbar-brand" href="../../index.html">Trinity</a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="../../index.html">Accueil</a>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                            Programming
                        </a>
                        <ul class="dropdown-menu">
                            <li><h6 class="dropdown-header">C++</h6></li>
                            <li><a class="dropdown-item" href="cpp-fundamentals.html">Fondamentaux C++</a></li>
                            <li><a class="dropdown-item" href="cpp-advanced.html">C++ Avancé</a></li>
                            <li><div class="dropdown-divider"></div></li>
                            <li><h6 class="dropdown-header">Java</h6></li>
                            <li><a class="dropdown-item" href="java-basics.html">Bases Java</a></li>
                            <li><a class="dropdown-item" href="java-advanced.html">Java Avancé</a></li>
                            <li><div class="dropdown-divider"></div></li>
                            <li><h6 class="dropdown-header">Python</h6></li>
                            <li><a class="dropdown-item" href="python-basics.html">Bases Python</a></li>
                            <li><a class="dropdown-item" href="python-advanced.html">Python Avancé</a></li>
                        </ul>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                            Game Hacking
                        </a>
                        <ul class="dropdown-menu">
                            <li><h6 class="dropdown-header">Cheat Engine</h6></li>
                            <li><a class="dropdown-item" href="../game-hacking/cheat-engine-basics.html">Bases</a></li>
                            <li><a class="dropdown-item" href="../game-hacking/cheat-engine-pointers.html">Pointeurs & Structures</a></li>
                            <li><div class="dropdown-divider"></div></li>
                            <li><h6 class="dropdown-header">Analyse Statique</h6></li>
                            <li><a class="dropdown-item" href="../game-hacking/ida-pro-basics.html">IDA Pro Bases</a></li>
                            <li><a class="dropdown-item" href="../game-hacking/ida-pro-intermediate.html">IDA Pro Intermédiaire</a></li>
                        </ul>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                            OSINT
                        </a>
                        <ul class="dropdown-menu">
                            <li><h6 class="dropdown-header">Fondamentaux</h6></li>
                            <li><a class="dropdown-item" href="../osint/osint-tools-methodology.html">Outils & Méthodologie</a></li>
                            <li><a class="dropdown-item" href="../osint/dark-web-osint.html">Dark Web OSINT</a></li>
                        </ul>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                            Security Research
                        </a>
                        <ul class="dropdown-menu">
                            <li><h6 class="dropdown-header">CVE Tracking</h6></li>
                            <li><a class="dropdown-item" href="../security/webkit-cve.html">WebKit CVEs</a></li>
                            <li><a class="dropdown-item" href="../security/gdk-cve.html">GDK CVEs</a></li>
                            <li><div class="dropdown-divider"></div></li>
                            <li><h6 class="dropdown-header">Exploit Development</h6></li>
                            <li><a class="dropdown-item" href="../security/webkit-exploits.html">WebKit Exploits</a></li>
                            <li><a class="dropdown-item" href="../security/gdk-exploits.html">GDK Exploits</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Background Canvas -->
    <canvas id="background-canvas"></canvas>

    <!-- Main Content -->
    <div class="container mt-5 pt-5">
        <h1 class="text-center mb-5">Cours : Fondamentaux C++</h1>

        <!-- Course Progress -->
        <div class="progress mb-4" style="height: 30px;">
            <div class="progress-bar bg-success" role="progressbar" style="width: 0%;" 
                 aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">
                0% Complété
            </div>
        </div>

        <!-- Introduction -->
        <section class="mb-5 content-section" id="introduction">
            <h2>Introduction au C++</h2>
            <div class="card">
                <div class="card-body">
                    <h3>Premier Programme</h3>
                    <pre><code class="cpp">#include <iostream>

int main() {
    std::cout << "Hello, World!" << std::endl;
    return 0;
}</code></pre>

                    <h3>Compilation</h3>
                    <pre><code class="bash"># Avec g++
g++ -o program program.cpp

# Avec clang++
clang++ -o program program.cpp</code></pre>
                </div>
            </div>
        </section>

        <!-- Variables and Types -->
        <section class="mb-5 content-section" id="variables">
            <h2>Variables et Types</h2>
            <div class="card">
                <div class="card-body">
                    <h3>Types Fondamentaux</h3>
                    <pre><code class="cpp">int nombre = 42;              // Entier
double decimal = 3.14;        // Nombre à virgule
char caractere = 'A';         // Caractère
bool condition = true;        // Booléen
std::string texte = "Hello";  // Chaîne de caractères</code></pre>

                    <h3>Constantes</h3>
                    <pre><code class="cpp">const int MAX_VALUE = 100;
#define PI 3.14159  // Macro</code></pre>
                </div>
            </div>
        </section>

        <!-- Control Flow -->
        <section class="mb-5 content-section" id="control">
            <h2>Structures de Contrôle</h2>
            <div class="card">
                <div class="card-body">
                    <h3>Conditions</h3>
                    <pre><code class="cpp">if (condition) {
    // Code
} else if (autre_condition) {
    // Code
} else {
    // Code
}

switch (variable) {
    case 1:
        // Code
        break;
    default:
        // Code
}</code></pre>

                    <h3>Boucles</h3>
                    <pre><code class="cpp">for (int i = 0; i < 10; i++) {
    // Code
}

while (condition) {
    // Code
}

do {
    // Code
} while (condition);</code></pre>
                </div>
            </div>
        </section>

        <!-- Functions -->
        <section class="mb-5 content-section" id="functions">
            <h2>Fonctions</h2>
            <div class="card">
                <div class="card-body">
                    <h3>Déclaration et Définition</h3>
                    <pre><code class="cpp">// Prototype
int addNumbers(int a, int b);

// Définition
int addNumbers(int a, int b) {
    return a + b;
}

// Fonction avec valeurs par défaut
void printMessage(std::string msg = "Hello") {
    std::cout << msg << std::endl;
}</code></pre>

                    <h3>Surcharge de Fonctions</h3>
                    <pre><code class="cpp">int multiply(int a, int b) {
    return a * b;
}

double multiply(double a, double b) {
    return a * b;
}</code></pre>
                </div>
            </div>
        </section>

        <!-- Classes -->
        <section class="mb-5 content-section" id="classes">
            <h2>Classes et Objets</h2>
            <div class="card">
                <div class="card-body">
                    <h3>Définition de Classe</h3>
                    <pre><code class="cpp">class Rectangle {
private:
    int width;
    int height;

public:
    // Constructeur
    Rectangle(int w, int h) : width(w), height(h) {}

    // Méthodes
    int getArea() {
        return width * height;
    }

    // Getters & Setters
    void setWidth(int w) { width = w; }
    int getWidth() { return width; }
};</code></pre>

                    <h3>Utilisation</h3>
                    <pre><code class="cpp">Rectangle rect(10, 20);
std::cout << rect.getArea() << std::endl;</code></pre>
                </div>
            </div>
        </section>

        <!-- Memory Management -->
        <section class="mb-5 content-section" id="memory">
            <h2>Gestion de la Mémoire</h2>
            <div class="card">
                <div class="card-body">
                    <h3>Allocation Dynamique</h3>
                    <pre><code class="cpp">// Ancien style (éviter)
int* ptr = new int;
delete ptr;

// Style moderne
std::unique_ptr<int> smart_ptr(new int);
std::shared_ptr<int> shared = std::make_shared<int>(42);</code></pre>

                    <h3>RAII</h3>
                    <pre><code class="cpp">class ResourceManager {
private:
    Resource* resource;

public:
    ResourceManager() : resource(new Resource()) {}
    ~ResourceManager() { delete resource; }
};</code></pre>
                </div>
            </div>
        </section>

        <!-- STL -->
        <section class="mb-5 content-section" id="stl">
            <h2>Bibliothèque Standard (STL)</h2>
            <div class="card">
                <div class="card-body">
                    <h3>Conteneurs</h3>
                    <pre><code class="cpp">#include <vector>
#include <map>
#include <string>

std::vector<int> numbers = {1, 2, 3, 4, 5};
std::map<std::string, int> ages = {
    {"Alice", 25},
    {"Bob", 30}
};</code></pre>

                    <h3>Algorithmes</h3>
                    <pre><code class="cpp">#include <algorithm>

// Tri
std::sort(numbers.begin(), numbers.end());

// Recherche
auto it = std::find(numbers.begin(), numbers.end(), 3);</code></pre>
                </div>
            </div>
        </section>

        <!-- Modern C++ -->
        <section class="mb-5 content-section" id="modern">
            <h2>C++ Moderne</h2>
            <div class="card">
                <div class="card-body">
                    <h3>Auto</h3>
                    <pre><code class="cpp">auto number = 42;
auto text = "Hello";
auto result = someFunction();</code></pre>

                    <h3>Lambda Expressions</h3>
                    <pre><code class="cpp">auto sum = [](int a, int b) { return a + b; };
std::cout << sum(5, 3) << std::endl;

// Capture de variables
int multiplier = 10;
auto multiply = [multiplier](int x) { return x * multiplier; };</code></pre>
                </div>
            </div>
        </section>

        <!-- Practical Exercise -->
        <section class="mb-5 content-section" id="exercise">
            <h2>Exercice Pratique</h2>
            <div class="card">
                <div class="card-body">
                    <h3>Projet : Gestionnaire de Contacts</h3>
                    <ol>
                        <li>Créer une classe Contact</li>
                        <li>Implémenter un système de stockage</li>
                        <li>Ajouter/Supprimer/Modifier des contacts</li>
                        <li>Rechercher des contacts</li>
                        <li>Sauvegarder/Charger depuis un fichier</li>
                    </ol>

                    <div class="alert alert-info">
                        <strong>Conseil :</strong> Utilisez les concepts vus dans le cours : classes, STL, gestion mémoire, etc.
                    </div>
                </div>
            </div>
        </section>
    </div>

    <footer class="text-center py-4">
        <p>Trinity Project © 2025 - Cours Fondamentaux C++</p>
    </footer>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="../../js/main.js"></script>
    <script>
        // Gestion de la progression
        function updateProgress() {
            const sections = document.querySelectorAll('.content-section');
            const progressBar = document.querySelector('.progress-bar');
            const completed = Math.round((Array.from(sections).filter(section => 
                section.getBoundingClientRect().top < window.innerHeight/2).length / sections.length) * 100);
            progressBar.style.width = completed + '%';
            progressBar.textContent = completed + '% Complété';
            progressBar.setAttribute('aria-valuenow', completed);
        }

        // Mise à jour de la progression au scroll
        window.addEventListener('scroll', updateProgress);
        updateProgress();
    </script>
</body>
</html>
